version: "3.5"
services:
  # Orion is the context broker
  orion-ld:
    image: ${ORION_IMAGE:-fiware/orion-ld:1.0.1}
    hostname: orion
    # sometimes the initial startup fails due to a weird timescale behaviour
    restart: always
    environment:
      - ORIONLD_TROE=TRUE
      - ORIONLD_TROE_USER=orion
      - ORIONLD_TROE_PWD=orion
      - ORIONLD_TROE_HOST=timescale
      - ORIONLD_MONGO_HOST=mongo-db
      - ORIONLD_LOG_LEVEL=DEBUG
    depends_on:
      - mongo-db
      - timescale
    networks:
      - default
    ports:
      - "1026:1026"
    healthcheck:
      test: curl --fail -s http://orion:1026/version || exit 1
      interval: 30s
      retries: 15

  # Databases
  mongo-db:
    image: mongo:4.0
    hostname: mongo-db
    expose:
      - "27017"
    ports:
      - "27017:27017" # localhost:27017
    networks:
      - default
    command: --nojournal
    volumes:
      - mongo-db:/data
    healthcheck:
      test: |
        host=`hostname --ip-address || echo '127.0.0.1'`;
        mongo --quiet $host/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1
      interval: 30s

  perseo-core:
    image: fiware/perseo-core
    hostname: perseo-core
    expose:
      - "8080"
    environment:
      - PERSEO_FE_URL=http://perseo-fe:9090
      - MAX_AGE=6000
    networks:
      - default
    depends_on:
      - mongo-db

  perseo-fe:
    image: fiware/perseo:1.17.0
    networks:
      - default
    expose:
      - "9090"
    ports:
      - "9090:9090"
    environment:
      - PERSEO_MONGO_ENDPOINT=mongo-db
      - PERSEO_CORE_URL=http://perseo-core:8080
      - PERSEO_LOG_LEVEL=debug
      - PERSEO_ORION_URL=http://orion:1026/
    depends_on:
      - mongo-db
      - perseo-core

  timescale:
    image: timescale/timescaledb-postgis:latest-pg12
    hostname: timescale
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U orion" ]
      interval: 15s
      timeout: 15s
      retries: 15
      start_period: 60s
    environment:
      - POSTGRES_USER=orion
      - POSTGRES_PASSWORD=orion
      - POSTGRES_HOST_AUTH_METHOD=trust
    expose:
      - "5432"
    ports:
      - "5432:5432"
    networks:
      - default

  mintaka:
    image: fiware/mintaka:0.3.42
    hostname: mintaka
    restart: always
    environment:
      - DATASOURCES_DEFAULT_HOST=timescale
      - DATASOURCES_DEFAULT_USERNAME=orion
      - DATASOURCES_DEFAULT_PASSWORD=orion
      - DATASOURCES_DEFAULT_DATABSE=orion
    expose:
      - "8080"
    ports:
      - "7080:8080"
    networks:
      - default

  contract-service:
    image: quay.io/wi_stefan/contract-service:0.1.5
    hostname: contract-service
    depends_on:
      - orion-ld
    expose:
      - "8080"
    ports:
    - "9080:8080"
    environment:
      - MICRONAUT_HTTP_SERVICES_BROKER_URL=http://orion-ld:1026
      - MICRONAUT_HTTP_SERVICES_PERSEO_URL=http://perseo-fe:9090
      - MICRONAUT_HTTP_SERVICES_DN_URL=http://dn:5001
      - GENERAL_CONTRACT_SERVICE_CALLBACK_URL=http://contract-service:8080/callback
      - GENERAL_PERSEO_URL=http://perseo-fe:9090/notices
      - GENERAL_TENANT=impress
    networks:
      - default
    volumes:
      - invoices:/invoices

  baas-backend:
    image: quay.io/wi_stefan/demo-backend
    hostname: baas-backend
    depends_on:
      - contract-service
      - orion-ld
    expose:
      - "8080"
    ports:
      - "4010:8080"
    environment:
      - MICRONAUT_HTTP_SERVICES_BROKER_URL=http://orion-ld:1026
      - MICRONAUT_HTTP_SERVICES_CONTRACT_SERVICE_URL=http://contract-service:8080
      - GENERAL_TENANT=impress
    networks:
      - default

  machine-simulator:
    image: wistefan/machine-simulator
    hostname: machine-simulator
    depends_on:
      - orion-ld
    environment:
      - MICRONAUT_HTTP_SERVICES_ORION_URL=http://orion-ld:1026
      - GENERAL_TENANT=impress
    networks:
      - default

  frontend:
    image: wistefan/itd:0.0.3
    hostname: impress-frontend
    ports:
      - 5000:5000
    networks:
      - default

  dn:
    image: wistefan/dn
    hostname: dn
    ports:
      - "5001:5001"
    environment:
      - SERVER_PORT=5001
      - CONTRACT_SERVICEPORT=8080
      - CONTRACT_SERVICE_ADDRESS=http://contract-service
    networks:
      - default

  # Weidmueller ML Model Runtime
  model-runtime:
    image: wistefan/wm-runtime
    hostname: wm_model_runtime
    restart: always
    networks:
      - default
    environment:
      - MONGODB_HOST=mongo-db-wm
      - MONGODB_PORT=27017
      - MONGODB_OUT_DATABASE=automl
      - MONGODB_OUT_COLLECTION=output
      - MONGODB_OUT_OBJNAME=anomaly
      - MONGODB_IN_DATABASE=mintaka
    depends_on:
      - mongo-db-wm

  # Fetches data from Mintaka and writes it to mongoDB
  mintaka-to-mongodb:
    image: wistefan/wm-mintaka-connector
    hostname: mmconnector
    restart: always
    networks:
      - default
    environment:
      - CONNECTOR_INTERVAL=60
      - CONNECTOR_TIMEOFFSET=0
      - CONNECTOR_CONSTANTVALUES=1
      - MINTAKA_HOST=mintaka
      - MINTAKA_PORT=8080
      - MINTAKA_SCHEME=http
      - MONGODB_HOST=mongo-db-wm
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=mintaka
    depends_on:
      - mintaka
      - mongo-db-wm

  # Takes data from MongoDB and sends it to an NGSI-Broker
  mongodb-to-ngsibroker:
    image: wistefan/wm-ngsi-connector
    hostname: reverse_connector
    restart: always
    networks:
      - default
    environment:
      - BROKER_HOST=orion
      - BROKER_PORT=1026
      - BROKER_SCHEME=http
      - BROKER_KEY=urn:ngsi-ld:anomalyscore
      - BROKER_ISOTIMESTAMP=FALSE
      - MONGODB_HOST=mongo-db-wm
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=automl
      - MONGODB_COLLECTION=output
      - MONGODB_OBJNAME=anomaly
    depends_on:
      - orion-ld
      - mongo-db-wm

  # MongoDB used by Weidmueller ML
  mongo-db-wm:
    image: mongo:4.0
    hostname: mongo-db-wm
    restart: always
    expose:
      - "27018"
    ports:
      - "27018:27017" # localhost:27018, container 27017
    networks:
      - default
    command: --nojournal
    volumes:
      - mongo-db-wm:/data
      - ./tmp:/wm
    healthcheck:
      test: |
        host=`hostname --ip-address || echo '127.0.0.1'`;
        mongo --quiet $host/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1
      interval: 30s

  lego-subsciber:
    image: quay.io/wi_stefan/lego-subscriber
    networks:
      - default
    environment:
      - DEV_GENERATOR_ENABLED=false
      - MQTT_HOST=192.168.1.100
      - NGSI_LD_HOST=orion
      - MQTT_TOPIC=/idFZy8D9KzFko7db/weight001/attrs
      - MQTT_PASSWORD=Lego12Demo34nstr56ator
      - MQTT_USER=LegoDemonstrator
    depends_on:
      - orion-ld

volumes:
  mongo-db: ~
  mongo-db-wm: ~
  invoices: ~
